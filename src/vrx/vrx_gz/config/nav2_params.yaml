# ────────────────────────────────────────────────────────────
# nav2_params.yaml (minimal setup + waypoint follower)
# ────────────────────────────────────────────────────────────

map_server:
  ros__parameters:
    use_sim_time: true
    mode: subscription
    subscribe_to_map_topic: true
    map_topic: /map

# ─── LOCAL COSTMAP ──────────────────────────────────────────
local_costmap:
  ros__parameters:
    use_sim_time: true
    global_frame: odom
    robot_base_frame: wamv/wamv/base_link
    update_frequency: 5.0
    publish_frequency: 2.0
    rolling_window: true
    width: 10.0
    height: 10.0
    resolution: 0.1
    plugins: ["obstacle_layer", "inflation_layer"]

    obstacle_layer:
      plugin: "nav2_costmap_2d::ObstacleLayer"
      observation_sources: laser_down
      laser_down:
        topic: /wamv/sensors/lidars/laser_down/scan
        data_type: "LaserScan"
        sensor_frame: wamv/wamv/base_link
        marking: true
        clearing: true

    inflation_layer:
      plugin: "nav2_costmap_2d::InflationLayer"
      inflation_radius: 1.0

# ─── GLOBAL COSTMAP ─────────────────────────────────────────
global_costmap:
  ros__parameters:
    use_sim_time: true
    global_frame: map
    robot_base_frame: wamv/wamv/base_link
    update_frequency: 1.0
    publish_frequency: 0.5
    plugins: ["static_layer", "obstacle_layer", "inflation_layer"]

    static_layer:
      plugin: "nav2_costmap_2d::StaticLayer"
      map_topic: /map
      subscribe_to_updates: true
      use_maximum: true

    obstacle_layer:
      plugin: "nav2_costmap_2d::ObstacleLayer"
      observation_sources: laser_down
      laser_down:
        topic: /wamv/sensors/lidars/laser_down/scan
        data_type: "LaserScan"
        sensor_frame: wamv/wamv/base_link
        marking: true
        clearing: true

    inflation_layer:
      plugin: "nav2_costmap_2d::InflationLayer"
      inflation_radius: 1.0

# ─── PLANNER SERVER ─────────────────────────────────────────
planner_server:
  ros__parameters:
    use_sim_time: true
    expected_planner_frequency: 20.0
    plugin_libraries: ["nav2_navfn_planner"]
    planner_plugins:  ["GridBased"]

    GridBased:
      plugin:        "nav2_navfn_planner::NavfnPlanner"
      tolerance:     0.5
      use_astar:     false
      allow_unknown: true

# ─── CONTROLLER SERVER ──────────────────────────────────────
controller_server:
  ros__parameters:
    use_sim_time: true
    plugin_libraries: ["nav2_regulated_pure_pursuit_controller"]
    controller_plugins: ["FollowPath"]

    FollowPath:
      plugin: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"
      lookahead_distance: 1.0
      desired_forward_speed: 0.5
      allow_backwards_motion: false

# ─── SMOOTHER SERVER ────────────────────────────────────────
smoother_server:
  ros__parameters:
    use_sim_time: true
    plugin_libraries: ["nav2_smoother"]
    smoother_plugins: ["savitzky_golay_smoother"]

    savitzky_golay_smoother:
      plugin: "nav2_smoother::SavitzkyGolaySmoother"
      window_length: 7
      polyorder: 3
      do_refinement: true
      refinement_num: 2
      enforce_path_inversion: true

# ─── BEHAVIOR TREE NAVIGATOR ────────────────────────────────
bt_navigator:
  ros__parameters:
    use_sim_time: true
    plugin_libraries: ["nav2_bt_navigator"]
    default_nav_to_pose_bt_xml: "/opt/ros/jazzy/share/nav2_bringup/behavior_trees/navigate_to_pose.xml"
    default_nav_through_poses_bt_xml: "/opt/ros/jazzy/share/nav2_bringup/behavior_trees/navigate_through_poses.xml"

# ─── WAYPOINT FOLLOWER ──────────────────────────────────────
waypoint_follower:
  ros__parameters:
    loop_rate: 20
    stop_on_failure: false
    waypoint_task_executor_plugin_ids: ["wait_at_waypoint"]
    waypoint_task_executor_plugins: ["nav2_waypoint_follower::WaitAtWaypoint"]

# ─── RECOVERIES SERVER ──────────────────────────────────────
recoveries_server:
  ros__parameters:
    use_sim_time: true
    plugin_libraries: ["nav2_recoveries/NavRecovery", "nav2_recoveries/BackUp"]
    recovery_plugins: ["spin", "back_up"]

# ─── LIFECYCLE MANAGERS ─────────────────────────────────────
lifecycle_manager_localization:
  ros__parameters:
    use_sim_time: true
    autostart: true
    node_names: ["map_server"]

lifecycle_manager_navigation:
  ros__parameters:
    use_sim_time: true
    autostart: true
    node_names:
      - local_costmap
      - global_costmap
      - planner_server
      - controller_server
      - smoother_server
      - bt_navigator
      - waypoint_follower
      - recoveries_server

# ─── COLLISION MONITOR ──────────────────────────────────────────
collision_monitor:
  ros__parameters:
    use_sim_time: true

    # which sensors to watch (we’ll split the same laser into two height filters)
    observation_sources: ["laser_down_hard", "laser_down_soft"]

    # list your zones—stop (hard) and slowdown (soft)
    polygons: ["HardZone", "SoftZone"]

    # don’t auto‐stop if data drops out
    source_timeout: 0.0

    # ── HARD ZONE: emergency stop if anything appears within 0–0.10 m below the lidar
    HardZone:
      type: "circle"               # you can also use "polygon" with explicit points
      radius: 1.0                  # adjust to cover your robot’s footprint
      action_type: "stop"
      min_points: 1
      visualize: true

    # ── SOFT ZONE: slowdown if anything appears within 0.10–0.25 m below the lidar
    SoftZone:
      type: "circle"
      radius: 1.0
      action_type: "slowdown"
      slowdown_ratio: 0.5
      min_points: 1
      visualize: true

    # ── your two “virtual” lasers with different height filters ──
    laser_down_hard:
      type: "scan"
      topic: "/wamv/sensors/lidars/laser_down/scan"
      min_height: 0.0
      max_height: 0.10
      enabled: true

    laser_down_soft:
      type: "scan"
      topic: "/wamv/sensors/lidars/laser_down/scan"
      min_height: 0.10
      max_height: 0.25
      enabled: true



